// <auto-generated />
using System;
using Jellyfin.HardwareVisualizer.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Jellyfin.HardwareVisualizer.Server.Migrations
{
    [DbContext(typeof(HardwareVisualizerDataContext))]
    [Migration("20250120175102_FixFfmpegFileHash")]
    partial class FixFfmpegFileHash
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.CpuType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CpuTypes");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HashMd5")
                        .HasColumnType("text");

                    b.Property<string>("HashSha256")
                        .HasColumnType("text");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uuid");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VersionGroup")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("FfmpegVersions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3f734be-fb92-4a1f-bd8c-b6701e0f7e9f"),
                            HashMd5 = "73a6a7f9d02a9abbda0f6aadd39abc89",
                            HashSha256 = "824542b798f04c482b171417002c3aee94f880eec2aa1ee9f016de6d912e31bd",
                            PlatformId = new Guid("2c361be8-c0ec-4020-984b-66c620dad840"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/windows/latest-5.x/amd64/jellyfin-ffmpeg_5.1.4-3-portable_win64.zip",
                            Version = "5.1.6-3",
                            VersionGroup = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512")
                        },
                        new
                        {
                            Id = new Guid("7f9e0bb6-7346-400f-881c-33c3c1558d78"),
                            HashMd5 = "73a6a7f9d02a9abbda0f6aadd39abc89",
                            HashSha256 = "824542b798f04c482b171417002c3aee94f880eec2aa1ee9f016de6d912e31bd",
                            PlatformId = new Guid("79191671-caa0-4b52-8a9e-eaa2f040a1cc"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/windows/latest-5.x/amd64/jellyfin-ffmpeg_5.1.4-3-portable_win64.zip",
                            Version = "5.1.6-3",
                            VersionGroup = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512")
                        },
                        new
                        {
                            Id = new Guid("2c720157-f8fb-48c9-8686-d4dfe7daae9a"),
                            HashMd5 = "61493050969F95E4D069BA01833834ED",
                            HashSha256 = "FA960A6A36CFF9FB9DF215DED55B57A1AC3285147849EF6BE1D8EA63552FFC17",
                            PlatformId = new Guid("8d58b84b-73dc-4275-985d-123abe886818"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/6.x/6.0.1-7/amd64/jellyfin-ffmpeg_6.0.1-7_portable_linux64-gpl.tar.xz",
                            Version = "6.0.1-7",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        },
                        new
                        {
                            Id = new Guid("501d7e27-8410-40af-b48d-1e7ce0002173"),
                            HashMd5 = "61493050969F95E4D069BA01833834ED",
                            HashSha256 = "FA960A6A36CFF9FB9DF215DED55B57A1AC3285147849EF6BE1D8EA63552FFC17",
                            PlatformId = new Guid("3657b420-2f2a-4940-8ed3-ee70b9b3720d"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/6.x/6.0.1-7/amd64/jellyfin-ffmpeg_6.0.1-7_portable_linux64-gpl.tar.xz",
                            Version = "6.0.1-7",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        },
                        new
                        {
                            Id = new Guid("5af82644-47a0-4c0c-ab83-31a5dff71153"),
                            HashMd5 = "db3ede0396234e92991f45c5ef9058b7",
                            HashSha256 = "ed4061fc90e35ac405cb824dc99781481879a20e0a6b447934ddadd54bc40b3d",
                            PlatformId = new Guid("5aea52ab-60bf-4425-b412-c046a60ccc83"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/macos/7.x/7.0.2-3/x86_64/jellyfin-ffmpeg_7.0.2-3_portable_mac64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5")
                        },
                        new
                        {
                            Id = new Guid("413b53ed-e63f-4410-b901-492173cabf13"),
                            HashMd5 = "bc6b6e09b2ec13871250f866e87952e8",
                            HashSha256 = "4f3eb2bf612e989d218a26c822d5d008cf3c4eafc54cf41e7816fc2eefc73d10",
                            PlatformId = new Guid("6cf9234f-a4bb-4099-8fc8-675a653ba573"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/macos/7.x/7.0.2-3/arm64/jellyfin-ffmpeg_7.0.2-3_portable_macarm64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5")
                        },
                        new
                        {
                            Id = new Guid("fe43005a-d480-4113-af8a-8ebbc6392071"),
                            HashMd5 = "2ab051df11ff755b5b7f51937188e186",
                            HashSha256 = "e0e8fd50233578bc68db43b25f63984808c7604b7787b3a30d40aad66902daf8",
                            PlatformId = new Guid("ebe72964-459b-411e-a8da-2ff77c7370e4"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/7.x/7.0.2-3/arm64/jellyfin-ffmpeg_7.0.2-3_portable_linuxarm64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.GpuType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GpuTypes");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HardwareCodecs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            Identifier = "h264",
                            Name = "H264"
                        },
                        new
                        {
                            Id = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            Identifier = "h265",
                            Name = "HVEC"
                        },
                        new
                        {
                            Id = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            Identifier = "av1",
                            Name = "AV1"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareDisplay", b =>
                {
                    b.Property<string>("HardwareCodec")
                        .HasColumnType("text");

                    b.Property<string>("ToResolution")
                        .HasColumnType("text");

                    b.Property<string>("FromResolution")
                        .HasColumnType("text");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<float>("Diviation")
                        .HasColumnType("real");

                    b.Property<double>("MaxStreams")
                        .HasColumnType("double precision");

                    b.HasKey("HardwareCodec", "ToResolution", "FromResolution", "DeviceType", "DeviceName");

                    b.ToTable("HardwareDisplays");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveyEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CpuTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromResolutionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GpuTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("HardwareSurveySubmissionId")
                        .HasColumnType("uuid");

                    b.Property<int>("MaxStreams")
                        .HasColumnType("integer");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ToHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ToResolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CpuTypeId");

                    b.HasIndex("FromHardwareCodecId");

                    b.HasIndex("FromResolutionId");

                    b.HasIndex("GpuTypeId");

                    b.HasIndex("HardwareSurveySubmissionId");

                    b.HasIndex("ToHardwareCodecId");

                    b.HasIndex("ToResolutionId");

                    b.ToTable("HardwareSurveyEntries");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("RawSurveySubmissionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RawSurveySubmissionId");

                    b.ToTable("HardwareSurveySubmissions");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AudioCodec")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<string>("HashMd5")
                        .HasColumnType("text");

                    b.Property<string>("HashSha256")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VideoCodecId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VideoCodecId");

                    b.ToTable("MediaTestFiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            AudioCodec = "",
                            Bitrate = 150L,
                            HashMd5 = "caf635e717ce87c40f751da542e18f16",
                            HashSha256 = "08bec94467502aec0123f7a1a7f7ba11240de7ff784c1b2b3b66f2936a3e56a1",
                            Name = "Test Jellyfin 4K HEVC 10bit 150M",
                            Size = 528L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/HEVC%2010bit/Test%20Jellyfin%204K%20HEVC%2010bit%20150M.mp4",
                            VideoCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            AudioCodec = "",
                            Bitrate = 150L,
                            HashMd5 = "75330504461b4920b51bd7e7f67096d2",
                            HashSha256 = "71b6633c593a8aab36a050db0369901640ec102caf00735a1fa7b16cbbb2aa42",
                            Name = "Test Jellyfin 4K AVC 150M.mp4",
                            Size = 528L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/AVC/Test%20Jellyfin%204K%20AVC%20150M.mp4",
                            VideoCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            AudioCodec = "",
                            Bitrate = 40L,
                            HashMd5 = "8530221143ce1fc59c1be6947b82c4bd",
                            HashSha256 = "738a7fb8fd951421791286a9609f03b963acd3d424420b3e58edac50ec8cf31c",
                            Name = "Test Jellyfin 4K HEVC 10bit 40M.mp4",
                            Size = 141L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/HEVC%2010bit/Test%20Jellyfin%204K%20HEVC%2010bit%2040M.mp4",
                            VideoCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            AudioCodec = "",
                            Bitrate = 30L,
                            HashMd5 = "7b0f05d66d0897bf9d5e3746a973acce",
                            HashSha256 = "9851037c599bb02bebfb2e77a6d88ab4d3e295542e3ad6b8f062711dae5112ec",
                            Name = "Test Jellyfin 1080p AVC 30M.mp4",
                            Size = 106L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/AVC/Test%20Jellyfin%201080p%20AVC%2030M.mp4",
                            VideoCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Architecture")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReplacementId")
                        .HasColumnType("text");

                    b.Property<bool>("Supported")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VersionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c361be8-c0ec-4020-984b-66c620dad840"),
                            Architecture = 1,
                            DisplayName = "Windows 11",
                            Name = "Windows 11",
                            Supported = true,
                            Type = 0,
                            Version = "Windows 11 version 23H2",
                            VersionId = "22631"
                        },
                        new
                        {
                            Id = new Guid("79191671-caa0-4b52-8a9e-eaa2f040a1cc"),
                            Architecture = 1,
                            DisplayName = "Windows 10",
                            Name = "Windows 10",
                            Supported = true,
                            Type = 0,
                            Version = "Windows 10 version 22H2",
                            VersionId = "19045"
                        },
                        new
                        {
                            Id = new Guid("8d58b84b-73dc-4275-985d-123abe886818"),
                            Architecture = 1,
                            DisplayName = "Ubuntu Focal",
                            Name = "Ubuntu",
                            Supported = true,
                            Type = 1,
                            Version = "Ubuntu",
                            VersionId = "22.04"
                        },
                        new
                        {
                            Id = new Guid("3657b420-2f2a-4940-8ed3-ee70b9b3720d"),
                            Architecture = 1,
                            DisplayName = "Linux Generic",
                            Name = "Linux Generic",
                            Supported = true,
                            Type = 1,
                            Version = "Linux",
                            VersionId = "Generic"
                        },
                        new
                        {
                            Id = new Guid("ebe72964-459b-411e-a8da-2ff77c7370e4"),
                            Architecture = 2,
                            DisplayName = "Linux Generic",
                            Name = "Linux Generic",
                            Supported = true,
                            Type = 1,
                            Version = "Linux",
                            VersionId = "Generic"
                        },
                        new
                        {
                            Id = new Guid("5aea52ab-60bf-4425-b412-c046a60ccc83"),
                            Architecture = 1,
                            DisplayName = "Mac OS Darwin",
                            Name = "MacOS",
                            Supported = true,
                            Type = 2,
                            Version = "14.5",
                            VersionId = "14.5"
                        },
                        new
                        {
                            Id = new Guid("6cf9234f-a4bb-4099-8fc8-675a653ba573"),
                            Architecture = 2,
                            DisplayName = "Mac OS Darwin",
                            Name = "MacOS",
                            Supported = true,
                            Type = 2,
                            Version = "14.5",
                            VersionId = "14.5"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.RawSurveySubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RawSurveySubmission");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<string>("FromResolution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaTestFileId")
                        .HasColumnType("uuid");

                    b.Property<int>("TestCaseType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ToCodecId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToResolution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MediaTestFileId");

                    b.HasIndex("ToCodecId");

                    b.ToTable("TestCases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59cccb69-1fdd-cf72-b2da-90cc2e7e3cc2"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("71d6d86c-b7a1-855c-cef4-7fa778d4add1"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("0a4ec8b0-691d-e1cb-3204-b33f86db05bf"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("63f10678-51c6-3ce9-810e-ee48b9da239d"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("0bfdb4e0-4be3-4a08-5a67-585024741c31"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("25f24cb1-4c54-b83c-9328-000a34ccde3f"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("09737fe6-4e65-4bb7-e7d8-85c2bba6360a"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("6b8f3d02-4aba-f0e7-8401-df8ba1ffb174"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("4a0053c9-7f66-afca-ab47-bff02c50029c"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("217e1616-fc3c-fb9f-c56d-e648810e507e"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("b24efd0f-ea5a-ba45-6490-4c270b267ff0"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("7b86cf07-dbae-f0e2-91a9-1d12cb235de7"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("e196dab2-ec63-0a7a-f912-57b6ac3b93d2"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("03266b05-8822-7a0e-dc33-212206873afa"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("77f1fd29-4639-8ce2-e75c-061e3ed28090"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("f78c933e-3d98-9904-79ab-f86fdca91d35"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("046f3625-981d-0dc8-9a7f-c6ddccd9ce67"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("0ea35dd1-8ed1-dfd3-b63d-06a34558389e"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("8a893353-5875-d1c9-33ac-157994b2e0eb"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("6d78c8f0-eb77-2cc4-90a1-dc6e83673278"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("bf567cd5-e77c-7290-98ed-142d21fd13f5"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("10057971-c127-797a-acf5-7eae599d4880"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("65a3acda-4e4f-016c-2b29-ff5a6f101bc5"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("7e989914-87be-2f91-7bf3-649262a7b5c1"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("5da70774-8acd-41a7-4306-6c73c42f1ebf"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("220896f2-9209-4cf8-39ff-5f30bac0ccf0"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("69fb6787-3ab5-bd97-204a-6c120fca2a52"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("46cbbc03-0bce-2d90-1f42-e72081139a36"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("927bdcde-2f8a-53c9-697f-f1062dad7c9e"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("5839fcf7-54b8-a7bd-c986-6e76e948f3b6"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("a3820862-6d23-4b95-def6-3d1c88471e8f"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("1bc8138f-b929-22ab-4695-e61371f8f1a2"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("9ad98f0a-7cca-9a57-41d2-cb285a29994c"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("0e574e7d-0fa5-ebd6-8fef-c9306e06117c"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("74078ac5-3c16-41ad-53b4-28fe9dc23f0b"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("ade9cbab-a0d1-9a95-a7ff-97870d58d389"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("adf2b8f1-c394-2426-3928-bd290cc4e555"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("84f92737-ebc0-58c9-f880-c9c02cdec9ac"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("96a4ca8d-6d7c-35e0-d6f9-0a03b076eb58"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("dbe95fff-2e87-3e7e-40b0-82e3cf924a25"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("0244052a-452d-2db7-3f98-05494002f657"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("97b69e5a-f54e-0635-141e-f4d2e5b39e2e"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("1c9281c2-0b47-71f7-dee1-3e7e85270f78"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("c0bcc210-7789-a0ef-3173-273d4842eaa1"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("ad1a9ba3-dc39-7338-2424-0aeefdc9fe44"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("d57126cc-7539-b770-b84f-b18f6a76d478"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("d4d73265-c11f-3e59-13f8-e71a944aa822"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("d8add6bd-fb22-fe10-379a-c7c031c74ed4"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("f87f6d28-885d-3966-f182-8373b731cd48"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("8b2e7b88-8b24-e79a-7ba9-340608539156"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("bcc05687-8cb7-73d1-37d6-e3faccb1415b"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("44473c61-4a67-913b-7dbb-86e27045f593"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("fffd7354-ba30-0b2f-9a5a-1f5ba75bd30f"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("f8fe5422-d111-8ecb-522d-9f26239c765d"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("ee4e2299-a178-1b30-7b53-69e7e0cfa43d"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("6aa220a3-db85-0a0d-9e9a-40509950b816"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("78f0d186-1329-225d-f9ec-10731cf8b8ba"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("d88ac6d4-d5f0-beb6-7752-ed0857183cf7"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("9f28afa9-180d-eca5-ef32-228f43593f8a"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("cefc56ab-b08d-f140-9d13-3f0a168a45fb"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("d45e83c8-2ad1-a5b9-7f2f-5f337f80f976"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("3d2bc7d5-035b-548a-8e7e-37115b4d7893"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("a366922d-506a-65c9-1d7f-35fb42fc8a06"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("604d9292-115c-cb42-179f-aa075384f9cd"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("2e66d24d-b954-af35-632c-72ca6cb4694a"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("f7c19e20-62a6-b5b3-7272-2bc22b0b0359"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("fa336f5c-1d5f-61f3-c1a0-87533509c639"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("a4a6d5a4-012e-2903-82df-ffadc9fcd24c"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("8905cc28-1b80-1d6e-dad0-7dd40231abd1"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("c895c596-0af0-6ed6-3048-b2d501762b0e"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("339b2f3d-2946-a6e7-1fd9-5260bd73ed93"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("ab5d5c29-5b42-9c73-a5d3-a2d9267b764c"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCaseArgument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FfmpegArgument")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FfmpegVersionGroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FfmpegVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<int>("TestCaseArgumentDeviceType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ToHardwareCodecId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FfmpegVersionId");

                    b.HasIndex("FromHardwareCodecId");

                    b.HasIndex("ToHardwareCodecId");

                    b.ToTable("TestCaseArguments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c5124ff-f035-c216-0aa3-5dd0a86ed733"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("4b16cc4b-3e49-671a-8758-a9f77b9a46cc"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("a6aff48f-13ee-1325-10dc-d75c8ec537a2"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("55d32bc1-9829-9f39-d0e7-1f5dc89e9684"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("cc87feca-3c43-f1b4-efbb-62b4a2fdb31d"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("7c64e69a-68b0-db74-78f7-0c59869bcb62"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("797d392d-6f63-58c9-b3cd-b28380fe235c"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("c5eafda1-1a71-fc61-c0fe-9ea5dd4ba84b"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("29fa0bf5-3b03-8f38-0f85-9cafa3c82526"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("d7aa10e0-a3d2-08c7-15e6-abf22af85f0c"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("88e6a760-1efd-25e5-8c4f-7b5597682175"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("eefb71f2-e757-d5e9-dfa6-3303dc18e4dd"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("328d78e7-018e-6dc5-a7fd-80a946847e5e"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("1957761c-44e3-bc89-4dbe-5bccbf572947"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("eea1a41c-d44f-f65b-ae8e-f837aedc0fda"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("daa033ef-ad70-60d6-37b5-4d150a5e67e9"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("78932cf9-d4b1-2cd8-2968-b6bf33f8672b"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("bbcd5f5d-aa05-19b8-a90f-71c47dd7f4ee"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("6e4d7781-d02b-3a2d-c9c2-774ae018c7cd"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("cdbf0b96-12c9-d7d3-1aa6-b54a1c1ad842"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("147513cb-3444-c905-dbfb-7708a1d25cdb"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("ace74565-5b31-0f01-638e-956eefc942cf"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("8135bb9e-e8cd-f0e1-4d14-307fc961afd0"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("01ac7c84-29a3-b38e-bd86-2e6bdc472c96"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("2bbbae34-f4eb-ce72-2387-b45b619d7c5f"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("89ce6dae-dbee-9a51-f471-9e8ee61b9336"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("4eb28789-e528-744d-7b6c-66978ed1e2b5"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("4ec23a32-c6e9-7bc9-a692-dc9ae48e35a6"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("cec9ddd1-74a6-fcc2-8def-a71efafee121"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("410a1371-3337-b57c-2e29-4f615c653dee"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("d7e88415-b586-0370-044d-986a3fa01615"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("08fcaa98-bbb1-0437-ab28-8c5828f6a306"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("996395b0-7f8a-524f-8832-7596e2642e82"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("81c9d73e-f2e7-93b0-8c6d-299ea68abb30"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("117b1e4d-f0df-df5c-46bd-755647329bd1"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("cc23a711-6feb-9eee-aa71-c88128f5e63c"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("adb83bf7-bfbe-e26d-8555-983e7fe3d5d4"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("2c49acbb-779a-4a87-6318-e6b91df1cc39"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("a73c3f16-f341-9fb4-f4a9-847e7ff546df"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("d24d3828-ae39-3a6b-265b-6d76f9dcab25"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("0a81ef18-ab36-7db7-de47-06a167173e49"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("b6fafd2e-ef9d-b04e-d5fc-2c10861bd7ad"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("048e1c9b-06be-3bb4-99ec-a3892f04f372"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("0528bcfd-878f-9897-ab7c-4ed86145d6df"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("500cd13c-60ba-1e87-26dd-0ca372601c78"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("58c85eb1-ef52-d094-e1f5-8431257f9c38"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("e5985e2a-f2da-48e4-98fc-9249f7350c4a"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("62f506b2-1f52-2461-371b-37a92b8f9b43"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("ef78a4dc-a924-03ec-1422-7d6dcbeb22d8"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("059f7916-ccf3-7415-e82f-055f5818904e"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("152c7de8-6775-f127-9395-71f1b89e3c2e"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("0b1d6b3e-1828-1649-e2a7-698a3a8989db"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("fe2a0c26-be43-f489-7765-ed0697f72508"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("49535f0e-eca0-6c7e-e2c7-c6a9c78883b1"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("c709cc8d-9ef3-c5c0-8442-23a4c6fb44c7"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("c8231720-c899-8a6c-6c52-cc59019600e8"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("74af004c-962d-f0c4-25fe-f6f0a20c5472"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("44a550b2-565f-3cf7-4d69-61bff007d983"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("ac3a3425-ed5a-07f4-3737-41714870545b"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("ad72eb8f-3d5c-6a6f-831c-495e6f5c81f7"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("c9015dc9-f1da-9094-a6fe-c3b20f3e7861"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("b21cae2a-5fdb-9768-5f6d-7d5ed36677d5"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("ab85f6ef-874e-db84-7756-281826e48d00"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("d068ce06-8625-9403-37cd-da31c30d5a1c"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("fe0cd927-b3ea-d2c8-9b1e-636bbafc5e90"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("2ac84667-d996-0c55-8156-e6db69468f2c"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("8ef438c9-1b3a-6d36-6095-733fcc4f7453"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("876d0a12-3a6c-a4af-2894-2b7f115fd513"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("35a1012d-cec2-2653-c2d3-b862bc2a6122"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("2d22e767-c2c2-d8ad-3162-9e366865581d"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("7579c36b-3b44-5c90-b383-85956f868e88"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("a62ea616-631d-3e36-2877-8106eacaa787"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("ec1f41c5-ca64-7a41-2ade-19474dcfdf4b"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("2632ffa5-8eb1-27f5-04c5-3edb42933f5a"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("0d84c99c-6f1d-39c3-4563-03c5833fdbcb"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("2eb5c3f1-f8f8-96eb-b677-e4ab58bc11da"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("1ebb20b5-1884-b8b3-8374-57f1512d6e03"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("4fbf8e3f-19fc-a093-5f1a-1ef407b09254"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("55ae773f-a60d-9568-30f3-3dd4b707c75d"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("a3c4566f-5518-4e6d-75af-6cc05d8b8741"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("7b85bed3-059a-cdba-64e3-83fcdbafd02f"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TestResolutions");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveyEntry", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.CpuType", "CpuType")
                        .WithMany()
                        .HasForeignKey("CpuTypeId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "FromHardwareCodec")
                        .WithMany()
                        .HasForeignKey("FromHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", "FromResolution")
                        .WithMany()
                        .HasForeignKey("FromResolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.GpuType", "GpuType")
                        .WithMany()
                        .HasForeignKey("GpuTypeId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", "HardwareSurveySubmission")
                        .WithMany("HardwareSurveyEntry")
                        .HasForeignKey("HardwareSurveySubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToHardwareCodec")
                        .WithMany()
                        .HasForeignKey("ToHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", "ToResolution")
                        .WithMany()
                        .HasForeignKey("ToResolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CpuType");

                    b.Navigation("FromHardwareCodec");

                    b.Navigation("FromResolution");

                    b.Navigation("GpuType");

                    b.Navigation("HardwareSurveySubmission");

                    b.Navigation("ToHardwareCodec");

                    b.Navigation("ToResolution");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.RawSurveySubmission", "RawSurveySubmission")
                        .WithMany()
                        .HasForeignKey("RawSurveySubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RawSurveySubmission");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "VideoCodec")
                        .WithMany()
                        .HasForeignKey("VideoCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCase", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", "MediaTestFile")
                        .WithMany("TestCases")
                        .HasForeignKey("MediaTestFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToCodec")
                        .WithMany()
                        .HasForeignKey("ToCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaTestFile");

                    b.Navigation("ToCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCaseArgument", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", null)
                        .WithMany("TestCaseArguments")
                        .HasForeignKey("FfmpegVersionId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "FromHardwareCodec")
                        .WithMany()
                        .HasForeignKey("FromHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToHardwareCodec")
                        .WithMany()
                        .HasForeignKey("ToHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromHardwareCodec");

                    b.Navigation("ToHardwareCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.Navigation("TestCaseArguments");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.Navigation("HardwareSurveyEntry");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.Navigation("TestCases");
                });
#pragma warning restore 612, 618
        }
    }
}
