// <auto-generated />
using System;
using Jellyfin.HardwareVisualizer.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Jellyfin.HardwareVisualizer.Server.Migrations
{
    [DbContext(typeof(HardwareVisualizerDataContext))]
    [Migration("20250119172354_FixIntelWindows")]
    partial class FixIntelWindows
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.CpuType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CpuTypes");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HashMd5")
                        .HasColumnType("text");

                    b.Property<string>("HashSha256")
                        .HasColumnType("text");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uuid");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VersionGroup")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("FfmpegVersions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3f734be-fb92-4a1f-bd8c-b6701e0f7e9f"),
                            HashMd5 = "73a6a7f9d02a9abbda0f6aadd39abc89",
                            HashSha256 = "824542b798f04c482b171417002c3aee94f880eec2aa1ee9f016de6d912e31bd",
                            PlatformId = new Guid("2c361be8-c0ec-4020-984b-66c620dad840"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/windows/latest-5.x/amd64/jellyfin-ffmpeg_5.1.4-3-portable_win64.zip",
                            Version = "5.1.6-3",
                            VersionGroup = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512")
                        },
                        new
                        {
                            Id = new Guid("7f9e0bb6-7346-400f-881c-33c3c1558d78"),
                            HashMd5 = "73a6a7f9d02a9abbda0f6aadd39abc89",
                            HashSha256 = "824542b798f04c482b171417002c3aee94f880eec2aa1ee9f016de6d912e31bd",
                            PlatformId = new Guid("79191671-caa0-4b52-8a9e-eaa2f040a1cc"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/windows/latest-5.x/amd64/jellyfin-ffmpeg_5.1.4-3-portable_win64.zip",
                            Version = "5.1.6-3",
                            VersionGroup = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512")
                        },
                        new
                        {
                            Id = new Guid("2c720157-f8fb-48c9-8686-d4dfe7daae9a"),
                            HashMd5 = "d41d8cd98f00b204e9800998ecf8427e",
                            HashSha256 = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                            PlatformId = new Guid("8d58b84b-73dc-4275-985d-123abe886818"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/6.x/6.0.1-7/amd64/jellyfin-ffmpeg_6.0.1-7_portable_linux64-gpl.tar.xz",
                            Version = "6.0.1-7",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        },
                        new
                        {
                            Id = new Guid("501d7e27-8410-40af-b48d-1e7ce0002173"),
                            HashMd5 = "d41d8cd98f00b204e9800998ecf8427e",
                            HashSha256 = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                            PlatformId = new Guid("3657b420-2f2a-4940-8ed3-ee70b9b3720d"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/6.x/6.0.1-7/amd64/jellyfin-ffmpeg_6.0.1-7_portable_linux64-gpl.tar.xz",
                            Version = "6.0.1-7",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        },
                        new
                        {
                            Id = new Guid("5af82644-47a0-4c0c-ab83-31a5dff71153"),
                            HashMd5 = "db3ede0396234e92991f45c5ef9058b7",
                            HashSha256 = "ed4061fc90e35ac405cb824dc99781481879a20e0a6b447934ddadd54bc40b3d",
                            PlatformId = new Guid("5aea52ab-60bf-4425-b412-c046a60ccc83"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/macos/7.x/7.0.2-3/x86_64/jellyfin-ffmpeg_7.0.2-3_portable_mac64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5")
                        },
                        new
                        {
                            Id = new Guid("413b53ed-e63f-4410-b901-492173cabf13"),
                            HashMd5 = "bc6b6e09b2ec13871250f866e87952e8",
                            HashSha256 = "4f3eb2bf612e989d218a26c822d5d008cf3c4eafc54cf41e7816fc2eefc73d10",
                            PlatformId = new Guid("6cf9234f-a4bb-4099-8fc8-675a653ba573"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/macos/7.x/7.0.2-3/arm64/jellyfin-ffmpeg_7.0.2-3_portable_macarm64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5")
                        },
                        new
                        {
                            Id = new Guid("fe43005a-d480-4113-af8a-8ebbc6392071"),
                            HashMd5 = "2ab051df11ff755b5b7f51937188e186",
                            HashSha256 = "e0e8fd50233578bc68db43b25f63984808c7604b7787b3a30d40aad66902daf8",
                            PlatformId = new Guid("ebe72964-459b-411e-a8da-2ff77c7370e4"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/7.x/7.0.2-3/arm64/jellyfin-ffmpeg_7.0.2-3_portable_linuxarm64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.GpuType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GpuTypes");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HardwareCodecs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            Identifier = "h264",
                            Name = "H264"
                        },
                        new
                        {
                            Id = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            Identifier = "h265",
                            Name = "HVEC"
                        },
                        new
                        {
                            Id = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            Identifier = "av1",
                            Name = "AV1"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareDisplay", b =>
                {
                    b.Property<string>("HardwareCodec")
                        .HasColumnType("text");

                    b.Property<string>("ToResolution")
                        .HasColumnType("text");

                    b.Property<string>("FromResolution")
                        .HasColumnType("text");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<float>("Diviation")
                        .HasColumnType("real");

                    b.Property<double>("MaxStreams")
                        .HasColumnType("double precision");

                    b.HasKey("HardwareCodec", "ToResolution", "FromResolution", "DeviceType", "DeviceName");

                    b.ToTable("HardwareDisplays");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveyEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CpuTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromResolutionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GpuTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("HardwareSurveySubmissionId")
                        .HasColumnType("uuid");

                    b.Property<int>("MaxStreams")
                        .HasColumnType("integer");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ToHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ToResolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CpuTypeId");

                    b.HasIndex("FromHardwareCodecId");

                    b.HasIndex("FromResolutionId");

                    b.HasIndex("GpuTypeId");

                    b.HasIndex("HardwareSurveySubmissionId");

                    b.HasIndex("ToHardwareCodecId");

                    b.HasIndex("ToResolutionId");

                    b.ToTable("HardwareSurveyEntries");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("RawSurveySubmissionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RawSurveySubmissionId");

                    b.ToTable("HardwareSurveySubmissions");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AudioCodec")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<string>("HashMd5")
                        .HasColumnType("text");

                    b.Property<string>("HashSha256")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VideoCodecId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VideoCodecId");

                    b.ToTable("MediaTestFiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            AudioCodec = "",
                            Bitrate = 150L,
                            HashMd5 = "caf635e717ce87c40f751da542e18f16",
                            HashSha256 = "08bec94467502aec0123f7a1a7f7ba11240de7ff784c1b2b3b66f2936a3e56a1",
                            Name = "Test Jellyfin 4K HEVC 10bit 150M",
                            Size = 528L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/HEVC%2010bit/Test%20Jellyfin%204K%20HEVC%2010bit%20150M.mp4",
                            VideoCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            AudioCodec = "",
                            Bitrate = 150L,
                            HashMd5 = "75330504461b4920b51bd7e7f67096d2",
                            HashSha256 = "71b6633c593a8aab36a050db0369901640ec102caf00735a1fa7b16cbbb2aa42",
                            Name = "Test Jellyfin 4K AVC 150M.mp4",
                            Size = 528L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/AVC/Test%20Jellyfin%204K%20AVC%20150M.mp4",
                            VideoCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            AudioCodec = "",
                            Bitrate = 40L,
                            HashMd5 = "8530221143ce1fc59c1be6947b82c4bd",
                            HashSha256 = "738a7fb8fd951421791286a9609f03b963acd3d424420b3e58edac50ec8cf31c",
                            Name = "Test Jellyfin 4K HEVC 10bit 40M.mp4",
                            Size = 141L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/HEVC%2010bit/Test%20Jellyfin%204K%20HEVC%2010bit%2040M.mp4",
                            VideoCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            AudioCodec = "",
                            Bitrate = 30L,
                            HashMd5 = "7b0f05d66d0897bf9d5e3746a973acce",
                            HashSha256 = "9851037c599bb02bebfb2e77a6d88ab4d3e295542e3ad6b8f062711dae5112ec",
                            Name = "Test Jellyfin 1080p AVC 30M.mp4",
                            Size = 106L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/AVC/Test%20Jellyfin%201080p%20AVC%2030M.mp4",
                            VideoCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Architecture")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReplacementId")
                        .HasColumnType("text");

                    b.Property<bool>("Supported")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VersionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c361be8-c0ec-4020-984b-66c620dad840"),
                            Architecture = 1,
                            DisplayName = "Windows 11",
                            Name = "Windows 11",
                            Supported = true,
                            Type = 0,
                            Version = "Windows 11 version 23H2",
                            VersionId = "22631"
                        },
                        new
                        {
                            Id = new Guid("79191671-caa0-4b52-8a9e-eaa2f040a1cc"),
                            Architecture = 1,
                            DisplayName = "Windows 10",
                            Name = "Windows 10",
                            Supported = true,
                            Type = 0,
                            Version = "Windows 10 version 22H2",
                            VersionId = "19045"
                        },
                        new
                        {
                            Id = new Guid("8d58b84b-73dc-4275-985d-123abe886818"),
                            Architecture = 1,
                            DisplayName = "Ubuntu Focal",
                            Name = "Ubuntu",
                            Supported = true,
                            Type = 1,
                            Version = "Ubuntu",
                            VersionId = "22.04"
                        },
                        new
                        {
                            Id = new Guid("3657b420-2f2a-4940-8ed3-ee70b9b3720d"),
                            Architecture = 1,
                            DisplayName = "Linux Generic",
                            Name = "Linux Generic",
                            Supported = true,
                            Type = 1,
                            Version = "Linux",
                            VersionId = "Generic"
                        },
                        new
                        {
                            Id = new Guid("ebe72964-459b-411e-a8da-2ff77c7370e4"),
                            Architecture = 2,
                            DisplayName = "Linux Generic",
                            Name = "Linux Generic",
                            Supported = true,
                            Type = 1,
                            Version = "Linux",
                            VersionId = "Generic"
                        },
                        new
                        {
                            Id = new Guid("5aea52ab-60bf-4425-b412-c046a60ccc83"),
                            Architecture = 1,
                            DisplayName = "Mac OS Darwin",
                            Name = "MacOS",
                            Supported = true,
                            Type = 2,
                            Version = "14.5",
                            VersionId = "14.5"
                        },
                        new
                        {
                            Id = new Guid("6cf9234f-a4bb-4099-8fc8-675a653ba573"),
                            Architecture = 2,
                            DisplayName = "Mac OS Darwin",
                            Name = "MacOS",
                            Supported = true,
                            Type = 2,
                            Version = "14.5",
                            VersionId = "14.5"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.RawSurveySubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RawSurveySubmission");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<string>("FromResolution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaTestFileId")
                        .HasColumnType("uuid");

                    b.Property<int>("TestCaseType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ToCodecId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToResolution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MediaTestFileId");

                    b.HasIndex("ToCodecId");

                    b.ToTable("TestCases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00e4f974-e2bb-73ff-17bd-6f19a654f459"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("4fc5b2e3-f978-26d0-9406-c61bdd0140a7"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("efdab0bc-1044-112a-42d0-8f936a2884c2"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("e573918f-5eb3-9119-0a0b-cd55caea9232"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("587376dd-0f9c-2d05-95bb-5318a4d59ebe"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("b999f595-e0bb-402c-9a15-8a99d5615a15"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("e1dc6739-c615-ec1b-7bcb-9d9950882d79"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("41ef8d0c-3562-bbe6-bd9d-ec7801e39b7a"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("72c41f89-75e2-2caf-47d5-f537609683e7"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("9b56278a-a4a1-0f4a-584c-bf786da2506a"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("d7a82ba4-3b2b-3d0b-8405-c4af218a4ed1"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("6ee45f59-2207-7caf-6310-735cb3f3cf05"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("cc668ab8-403e-ac7a-f4fb-c5d80d2c43f9"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("c7291a96-f0ba-2d69-b73e-68e2f7c0d18f"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("0a3e269b-fee9-14a8-5bac-d14c3bc19ad2"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("017e660e-75ee-536d-3f9c-8723ead3c55e"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("0edc9cda-da87-b612-4b93-22c9000817a1"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("a25a2fca-adde-6ad3-6521-6b9abb8fa427"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("0c4fd87d-3295-37d3-d087-70d9762044a9"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("c0e19718-acc9-df6a-82bd-7ffb0e23f988"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("d00eafb5-5389-7e6c-c136-3e58e30753db"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("e3a70a8a-bf0c-1dae-8dd0-1196bcca54cc"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("f49b3233-d6dd-db3f-8e22-90a3893116fb"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("d5da2eae-3131-388d-2b5b-621de750f6c9"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("85444aab-9b05-21b0-6047-5889108a163b"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("bbf1f9dd-c9cb-a062-b24b-b4d13ef70374"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("e1a1325f-1e8c-c927-41bd-8c28ab8fe24c"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("f68dd647-8cf9-2c26-3314-e3fd3dbba4ad"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("7bcac2a0-f676-1f6d-5a68-96a554527dc8"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("37811667-4a3a-a231-0aef-75aeeeb79659"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("8573f3f4-9569-390f-23ca-936612a3f71e"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("8d5da2cf-296d-070b-040e-035b1c66dd55"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("7ace8ccb-0b30-c412-5770-281aa5c4b201"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("4fb2fe9f-ea8b-a806-3b7a-ed265028f9a5"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("e48c955f-9a66-0a07-4255-59fd112dcca9"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("59510db8-d86f-6196-cd38-446760f82d86"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("3b86e251-a141-64fa-8392-3fe210f5b67b"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("849625de-abd3-091b-570b-4ca088d0a57d"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("1c5bd8c0-9fe6-1f65-49d8-d8ab383f371f"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("2b0764de-b5b4-c45c-2cd5-29966f407493"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("f3ffba03-2ded-f7a5-53ed-bb69b6cb202b"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("49ab729a-38f7-6db9-f16a-207b00a4336d"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("b32e2de5-4eea-bf84-682b-fafbeec3c48e"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("f6ed05e4-fa1d-0c53-2e5c-5d792dace966"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("2471f90e-8135-b259-b926-62bf327d04db"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("4817ad60-6519-66a0-b541-1ee05c773226"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("6421ac99-cf09-3f2e-4d26-e127ac7e723c"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("94a97bf5-b00b-5255-7f6d-5a86457bc539"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("0fca84d5-25e8-104d-2924-6a9ff0532d29"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("73d237d4-35fc-3e94-3576-5bc9597247e5"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("bed28356-d80f-77ef-19bf-eeae012e6314"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("b3897d91-5b1f-1728-1147-0ba46727bca0"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("c0cc459a-8fb4-c915-296a-0dd1991ea7e7"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("bba15011-af41-0fb4-c9ac-c01c19e744d3"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("711cd1ff-b253-5cca-a7f4-b73557fcfbfa"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("c957b436-422d-d2db-a6fe-1ce73ee0966c"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("408c5c1a-7672-db53-c261-00f5d2e81e7b"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("88a07aac-df7f-f2ff-7f8d-7ecdfc8a1c2e"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("e99fc1f3-63c4-ed68-9d5e-d1e3b3f8dc47"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("63e15dee-9e92-42c8-fd76-f1123338d278"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("7f4737ca-6f26-8a63-6c08-eea261a30d59"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("7b406143-05a8-9f9b-fe2a-0e7af94857b3"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("14575fd3-3472-a1ee-2bcf-70bb80b06029"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("451e065d-9e95-37c6-6aaf-f8bab91c6468"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("d07e8efd-f184-354b-63fe-d7bcb4488b94"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("4cfefa65-e948-9bd1-5415-edd2ddcec152"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("0b21fad9-b794-bd59-03bd-9d06a7cb5b09"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("9814642b-6653-deae-bf2d-7f9e114055c0"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("f19e81d1-e71f-a4f4-3c6c-b307935d1969"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("61714229-28f2-9ae6-3fee-80f72e59ee15"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("547b2902-98ca-358a-1047-499e538ca5ea"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("6337ee7a-077d-2843-1839-694ba7e77fab"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCaseArgument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FfmpegArgument")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FfmpegVersionGroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FfmpegVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<int>("TestCaseArgumentDeviceType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ToHardwareCodecId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FfmpegVersionId");

                    b.HasIndex("FromHardwareCodecId");

                    b.HasIndex("ToHardwareCodecId");

                    b.ToTable("TestCaseArguments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6975d95e-3da2-bddc-7ce2-69345f145b4d"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("9106f5ce-61fb-265e-ea11-cfbe52251c29"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("dd9f1089-b328-e57d-ee10-e4d2bad7eb08"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("c864ad66-ee42-6330-9bc6-be9e6213e596"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("70c29b57-7888-0f80-79e2-a59ae64c2086"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("4b71f248-b958-2ca4-c1d2-623ba4013836"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("c6dfc787-55eb-a864-150f-f13731c260ef"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("817c8b86-24e4-8379-9c04-ece2d9a95410"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("c32c42d1-1815-2c9b-cc28-c946d0246d02"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("1a36c02e-aa42-af38-8672-cc53e8a0dc6d"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("93fba4f2-3e3c-c4e8-4625-7104c1191689"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("fddba558-f4b8-5b59-32fc-861a0b136003"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("bb237e7c-31ff-749b-285f-c363c9ece318"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("a3d9fb1f-d41d-3288-26e8-49e09d06db2f"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("724b7de7-b6a0-1ee6-31ce-0790406251dd"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("4be5e6df-b402-8fc4-9547-3ea34b84e7e8"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("3561aa6d-6f87-e2b6-1b8b-32ec21c8c2ef"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("f184cc26-d77b-9e8f-74b2-de7dee210a18"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("2573a4d5-f5ed-8e69-95b6-bf2c6093f9ae"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("1b261d89-4b22-3f7d-a288-fc8ec87b843a"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("591b53e9-1211-33a2-80ed-e25735ec5f6e"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("4e7d2f1f-4a82-60b7-53ce-d70bb37d6133"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("d22c8b37-6a65-1e66-a16d-b89194741b1e"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("f64cb884-4996-39ef-27f3-7bdf8f259070"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("37b39e86-084d-b9c6-16d0-bcebfe9a2b53"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("bcea5015-416b-23f6-83e6-d86865d01485"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("3cdf1a3d-cd95-384e-70d6-e01da7b92bab"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("b3035b9c-1887-c803-ce6a-2e3699f50528"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("8a323426-fe85-0375-beb6-2a8d5e28f913"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("83abdc76-6e37-7b49-2df7-2615c4e540c8"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("6e21c6af-1526-35bb-9929-1cd5ab6f9aba"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("9f889650-9bae-88f6-6408-6fb7a413166a"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("888d58a5-24f8-e9b6-b700-9c35658546b9"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("826ab2e4-7099-af15-3cd6-a4b243e30763"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("ea410d3c-d72b-9334-cb5c-12089e484dcc"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("80b0083e-d55b-6820-ed4d-5122a5ed4e1f"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("4cec9593-f82e-bef5-757f-06e986a359d1"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("2aa1a0cb-c09e-ec8a-3093-1606777868b6"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("54781349-f72f-12f2-53a7-cec776043087"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("e6b306c9-47d5-ef3c-8257-55bb977f6061"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("2992bf3f-e244-effe-5d3b-3fae94d2cf60"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("3e6a5201-5321-b4e7-6ac9-30c014e0847a"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("75826afb-2f04-5133-fec1-fba386cd7c04"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("fecce7bd-ebcb-25ce-dbdd-4328f8bdad07"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("9ba7c03d-4e0f-3281-489e-15ffda9b2591"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("bd72b8d5-a74f-aa50-7c89-bb724d4c2ef1"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("ac7331d4-87a3-f809-5c7e-029ba0d8238a"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("eeb7e7fc-3d77-e29d-dd74-b161f2615840"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("06dd402a-a1e3-1ac8-0c91-ec12229c43ac"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("191bf053-5369-a91b-81b3-2370c333692c"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("fc56517a-8382-c60f-a03d-b3ee934e4dc3"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("78a616a3-68bd-311c-74f8-993bc046a1ff"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("4644a56b-4e1e-ba12-a004-ddec3f088548"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("71c31f8c-cdc5-9120-d775-c1d8680e9b2a"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("3c285e5b-e391-7378-8c2e-b33a5a8729e0"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("ccc48170-bedc-8736-dde5-539ab5750067"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("fddb6c61-14ce-148d-55c1-4c6e5ac2d2ce"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("f02b58b1-d8ef-b231-b007-c3f24b2c8a31"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("094b1e0c-f123-9cba-d3af-a110933f02ed"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("22d9e32c-dff6-11f4-5d8b-a56dc2e4043d"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("04b4786a-6979-a81b-23b1-bcc51f592f19"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("af678e4d-211d-32d7-b04a-56b7f2be4484"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("2c6cda39-0e2e-251a-cd1a-330ca02bf680"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("b8e9d13b-ae0d-0aa6-330b-c66ca0af94e2"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("603b53d5-6767-69f0-a2a8-5258ac008e67"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("6d602b13-2711-d46c-be5f-542531a2664e"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("8428d0f4-2312-d206-f1eb-48fe4175cd07"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("b1cec37c-fd24-effd-3cfd-d78c3b8d49cd"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("1670ea64-729d-9666-11c9-17afbf4c30cd"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("3e22e595-0f73-3cd0-7e91-fa04377b0a99"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("b3569c90-6ad4-2149-220a-5803e48c6a6e"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("add20397-87cd-87f6-b0b0-971b991e4436"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("b4199fef-28f1-cd58-d73c-03ebe046219d"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("fb553958-10cd-5b5c-a274-4161281dcaf4"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("572fd477-0af3-0a4a-2510-583111a0029c"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("cc693e81-f256-5b6f-c504-a5ea4bc36ae2"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("32d780f2-f10c-5024-d458-59d6a1783e17"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("843ad3eb-1eff-7da5-1276-c8c22a3bf176"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("916ed6d2-acc5-4d53-173f-c39464f14ee9"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("49f6a892-fd59-6a11-c0cc-fa0b8f914ac8"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("25e6ad67-fe1f-0957-e2a0-d909c1241be2"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \\\"scale_qsv=-1:{scale}:format=nv12\\\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TestResolutions");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveyEntry", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.CpuType", "CpuType")
                        .WithMany()
                        .HasForeignKey("CpuTypeId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "FromHardwareCodec")
                        .WithMany()
                        .HasForeignKey("FromHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", "FromResolution")
                        .WithMany()
                        .HasForeignKey("FromResolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.GpuType", "GpuType")
                        .WithMany()
                        .HasForeignKey("GpuTypeId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", "HardwareSurveySubmission")
                        .WithMany("HardwareSurveyEntry")
                        .HasForeignKey("HardwareSurveySubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToHardwareCodec")
                        .WithMany()
                        .HasForeignKey("ToHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", "ToResolution")
                        .WithMany()
                        .HasForeignKey("ToResolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CpuType");

                    b.Navigation("FromHardwareCodec");

                    b.Navigation("FromResolution");

                    b.Navigation("GpuType");

                    b.Navigation("HardwareSurveySubmission");

                    b.Navigation("ToHardwareCodec");

                    b.Navigation("ToResolution");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.RawSurveySubmission", "RawSurveySubmission")
                        .WithMany()
                        .HasForeignKey("RawSurveySubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RawSurveySubmission");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "VideoCodec")
                        .WithMany()
                        .HasForeignKey("VideoCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCase", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", "MediaTestFile")
                        .WithMany("TestCases")
                        .HasForeignKey("MediaTestFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToCodec")
                        .WithMany()
                        .HasForeignKey("ToCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaTestFile");

                    b.Navigation("ToCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCaseArgument", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", null)
                        .WithMany("TestCaseArguments")
                        .HasForeignKey("FfmpegVersionId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "FromHardwareCodec")
                        .WithMany()
                        .HasForeignKey("FromHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToHardwareCodec")
                        .WithMany()
                        .HasForeignKey("ToHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromHardwareCodec");

                    b.Navigation("ToHardwareCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.Navigation("TestCaseArguments");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.Navigation("HardwareSurveyEntry");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.Navigation("TestCases");
                });
#pragma warning restore 612, 618
        }
    }
}
