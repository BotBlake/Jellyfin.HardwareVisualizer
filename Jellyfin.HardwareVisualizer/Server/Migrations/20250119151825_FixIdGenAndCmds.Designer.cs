// <auto-generated />
using System;
using Jellyfin.HardwareVisualizer.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Jellyfin.HardwareVisualizer.Server.Migrations
{
    [DbContext(typeof(HardwareVisualizerDataContext))]
    [Migration("20250119151825_FixIdGenAndCmds")]
    partial class FixIdGenAndCmds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.CpuType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CpuTypes");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HashMd5")
                        .HasColumnType("text");

                    b.Property<string>("HashSha256")
                        .HasColumnType("text");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uuid");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VersionGroup")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("FfmpegVersions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3f734be-fb92-4a1f-bd8c-b6701e0f7e9f"),
                            HashMd5 = "73a6a7f9d02a9abbda0f6aadd39abc89",
                            HashSha256 = "824542b798f04c482b171417002c3aee94f880eec2aa1ee9f016de6d912e31bd",
                            PlatformId = new Guid("2c361be8-c0ec-4020-984b-66c620dad840"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/windows/latest-5.x/amd64/jellyfin-ffmpeg_5.1.4-3-portable_win64.zip",
                            Version = "5.1.6-3",
                            VersionGroup = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512")
                        },
                        new
                        {
                            Id = new Guid("7f9e0bb6-7346-400f-881c-33c3c1558d78"),
                            HashMd5 = "73a6a7f9d02a9abbda0f6aadd39abc89",
                            HashSha256 = "824542b798f04c482b171417002c3aee94f880eec2aa1ee9f016de6d912e31bd",
                            PlatformId = new Guid("79191671-caa0-4b52-8a9e-eaa2f040a1cc"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/windows/latest-5.x/amd64/jellyfin-ffmpeg_5.1.4-3-portable_win64.zip",
                            Version = "5.1.6-3",
                            VersionGroup = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512")
                        },
                        new
                        {
                            Id = new Guid("2c720157-f8fb-48c9-8686-d4dfe7daae9a"),
                            HashMd5 = "d41d8cd98f00b204e9800998ecf8427e",
                            HashSha256 = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                            PlatformId = new Guid("8d58b84b-73dc-4275-985d-123abe886818"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/6.x/6.0.1-7/amd64/jellyfin-ffmpeg_6.0.1-7_portable_linux64-gpl.tar.xz",
                            Version = "6.0.1-7",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        },
                        new
                        {
                            Id = new Guid("501d7e27-8410-40af-b48d-1e7ce0002173"),
                            HashMd5 = "d41d8cd98f00b204e9800998ecf8427e",
                            HashSha256 = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                            PlatformId = new Guid("3657b420-2f2a-4940-8ed3-ee70b9b3720d"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/6.x/6.0.1-7/amd64/jellyfin-ffmpeg_6.0.1-7_portable_linux64-gpl.tar.xz",
                            Version = "6.0.1-7",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        },
                        new
                        {
                            Id = new Guid("5af82644-47a0-4c0c-ab83-31a5dff71153"),
                            HashMd5 = "db3ede0396234e92991f45c5ef9058b7",
                            HashSha256 = "ed4061fc90e35ac405cb824dc99781481879a20e0a6b447934ddadd54bc40b3d",
                            PlatformId = new Guid("5aea52ab-60bf-4425-b412-c046a60ccc83"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/macos/7.x/7.0.2-3/x86_64/jellyfin-ffmpeg_7.0.2-3_portable_mac64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5")
                        },
                        new
                        {
                            Id = new Guid("413b53ed-e63f-4410-b901-492173cabf13"),
                            HashMd5 = "bc6b6e09b2ec13871250f866e87952e8",
                            HashSha256 = "4f3eb2bf612e989d218a26c822d5d008cf3c4eafc54cf41e7816fc2eefc73d10",
                            PlatformId = new Guid("6cf9234f-a4bb-4099-8fc8-675a653ba573"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/macos/7.x/7.0.2-3/arm64/jellyfin-ffmpeg_7.0.2-3_portable_macarm64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5")
                        },
                        new
                        {
                            Id = new Guid("fe43005a-d480-4113-af8a-8ebbc6392071"),
                            HashMd5 = "2ab051df11ff755b5b7f51937188e186",
                            HashSha256 = "e0e8fd50233578bc68db43b25f63984808c7604b7787b3a30d40aad66902daf8",
                            PlatformId = new Guid("ebe72964-459b-411e-a8da-2ff77c7370e4"),
                            Source = "https://repo.jellyfin.org/files/ffmpeg/linux/7.x/7.0.2-3/arm64/jellyfin-ffmpeg_7.0.2-3_portable_linuxarm64-gpl.tar.xz",
                            Version = "7.0.2-3",
                            VersionGroup = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.GpuType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GpuTypes");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HardwareCodecs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            Identifier = "h264",
                            Name = "H264"
                        },
                        new
                        {
                            Id = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            Identifier = "h265",
                            Name = "HVEC"
                        },
                        new
                        {
                            Id = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            Identifier = "av1",
                            Name = "AV1"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareDisplay", b =>
                {
                    b.Property<string>("HardwareCodec")
                        .HasColumnType("text");

                    b.Property<string>("ToResolution")
                        .HasColumnType("text");

                    b.Property<string>("FromResolution")
                        .HasColumnType("text");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<float>("Diviation")
                        .HasColumnType("real");

                    b.Property<double>("MaxStreams")
                        .HasColumnType("double precision");

                    b.HasKey("HardwareCodec", "ToResolution", "FromResolution", "DeviceType", "DeviceName");

                    b.ToTable("HardwareDisplays");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveyEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CpuTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromResolutionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GpuTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("HardwareSurveySubmissionId")
                        .HasColumnType("uuid");

                    b.Property<int>("MaxStreams")
                        .HasColumnType("integer");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ToHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ToResolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CpuTypeId");

                    b.HasIndex("FromHardwareCodecId");

                    b.HasIndex("FromResolutionId");

                    b.HasIndex("GpuTypeId");

                    b.HasIndex("HardwareSurveySubmissionId");

                    b.HasIndex("ToHardwareCodecId");

                    b.HasIndex("ToResolutionId");

                    b.ToTable("HardwareSurveyEntries");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("RawSurveySubmissionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RawSurveySubmissionId");

                    b.ToTable("HardwareSurveySubmissions");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AudioCodec")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<string>("HashMd5")
                        .HasColumnType("text");

                    b.Property<string>("HashSha256")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VideoCodecId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VideoCodecId");

                    b.ToTable("MediaTestFiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            AudioCodec = "",
                            Bitrate = 150L,
                            HashMd5 = "caf635e717ce87c40f751da542e18f16",
                            HashSha256 = "08bec94467502aec0123f7a1a7f7ba11240de7ff784c1b2b3b66f2936a3e56a1",
                            Name = "Test Jellyfin 4K HEVC 10bit 150M",
                            Size = 528L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/HEVC%2010bit/Test%20Jellyfin%204K%20HEVC%2010bit%20150M.mp4",
                            VideoCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            AudioCodec = "",
                            Bitrate = 150L,
                            HashMd5 = "75330504461b4920b51bd7e7f67096d2",
                            HashSha256 = "71b6633c593a8aab36a050db0369901640ec102caf00735a1fa7b16cbbb2aa42",
                            Name = "Test Jellyfin 4K AVC 150M.mp4",
                            Size = 528L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/AVC/Test%20Jellyfin%204K%20AVC%20150M.mp4",
                            VideoCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            AudioCodec = "",
                            Bitrate = 40L,
                            HashMd5 = "8530221143ce1fc59c1be6947b82c4bd",
                            HashSha256 = "738a7fb8fd951421791286a9609f03b963acd3d424420b3e58edac50ec8cf31c",
                            Name = "Test Jellyfin 4K HEVC 10bit 40M.mp4",
                            Size = 141L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/HEVC%2010bit/Test%20Jellyfin%204K%20HEVC%2010bit%2040M.mp4",
                            VideoCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            AudioCodec = "",
                            Bitrate = 30L,
                            HashMd5 = "7b0f05d66d0897bf9d5e3746a973acce",
                            HashSha256 = "9851037c599bb02bebfb2e77a6d88ab4d3e295542e3ad6b8f062711dae5112ec",
                            Name = "Test Jellyfin 1080p AVC 30M.mp4",
                            Size = 106L,
                            SourceUrl = "https://repo.jellyfin.org/test-videos/SDR/AVC/Test%20Jellyfin%201080p%20AVC%2030M.mp4",
                            VideoCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Architecture")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReplacementId")
                        .HasColumnType("text");

                    b.Property<bool>("Supported")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VersionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c361be8-c0ec-4020-984b-66c620dad840"),
                            Architecture = 1,
                            DisplayName = "Windows 11",
                            Name = "Windows 11",
                            Supported = true,
                            Type = 0,
                            Version = "Windows 11 version 23H2",
                            VersionId = "22631"
                        },
                        new
                        {
                            Id = new Guid("79191671-caa0-4b52-8a9e-eaa2f040a1cc"),
                            Architecture = 1,
                            DisplayName = "Windows 10",
                            Name = "Windows 10",
                            Supported = true,
                            Type = 0,
                            Version = "Windows 10 version 22H2",
                            VersionId = "19045"
                        },
                        new
                        {
                            Id = new Guid("8d58b84b-73dc-4275-985d-123abe886818"),
                            Architecture = 1,
                            DisplayName = "Ubuntu Focal",
                            Name = "Ubuntu",
                            Supported = true,
                            Type = 1,
                            Version = "Ubuntu",
                            VersionId = "22.04"
                        },
                        new
                        {
                            Id = new Guid("3657b420-2f2a-4940-8ed3-ee70b9b3720d"),
                            Architecture = 1,
                            DisplayName = "Linux Generic",
                            Name = "Linux Generic",
                            Supported = true,
                            Type = 1,
                            Version = "Linux",
                            VersionId = "Generic"
                        },
                        new
                        {
                            Id = new Guid("ebe72964-459b-411e-a8da-2ff77c7370e4"),
                            Architecture = 2,
                            DisplayName = "Linux Generic",
                            Name = "Linux Generic",
                            Supported = true,
                            Type = 1,
                            Version = "Linux",
                            VersionId = "Generic"
                        },
                        new
                        {
                            Id = new Guid("5aea52ab-60bf-4425-b412-c046a60ccc83"),
                            Architecture = 1,
                            DisplayName = "Mac OS Darwin",
                            Name = "MacOS",
                            Supported = true,
                            Type = 2,
                            Version = "14.5",
                            VersionId = "14.5"
                        },
                        new
                        {
                            Id = new Guid("6cf9234f-a4bb-4099-8fc8-675a653ba573"),
                            Architecture = 2,
                            DisplayName = "Mac OS Darwin",
                            Name = "MacOS",
                            Supported = true,
                            Type = 2,
                            Version = "14.5",
                            VersionId = "14.5"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.RawSurveySubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RawSurveySubmission");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<string>("FromResolution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaTestFileId")
                        .HasColumnType("uuid");

                    b.Property<int>("TestCaseType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ToCodecId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToResolution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MediaTestFileId");

                    b.HasIndex("ToCodecId");

                    b.ToTable("TestCases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7e452ba-6dcb-e411-515e-51445b5017ae"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("78fc8d1f-5046-56ab-e80c-7f5938b2df46"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("16a7ff1c-1ee4-99d0-87cb-5f50fb3258da"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("a0aca543-940c-9fd1-312a-bc30c8407fc4"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("e5eddfdd-10d6-d223-578b-b23c33e9bd17"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("4a181a4b-b478-3094-5885-89f0a13e271e"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("18004bee-b38d-a20c-164c-e65a5a82adfd"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("4f4cf1b1-36f1-27b7-eb13-40167e96e4e6"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("7470feaa-8800-00cd-1cdd-aafd054be5cc"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("7eca0e6f-a075-121f-40cc-dae741d839a1"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("27787362-72db-c7e5-274f-b926d21f93bc"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("b3a5712e-4d23-ca79-f017-55c95fbad047"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("8f88501c-a563-7d32-27ac-4ddad5649ae0"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("048c2c55-8e64-7cd2-5f02-dd5946a8f41f"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("f4f0ca2f-f353-04e4-d329-b76023fc2639"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("98dc75e7-0493-480f-a5db-108b03ca35e7"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("b054c156-87ba-eee7-05cd-c38fb77f9e91"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("0211351a-ffc6-bed6-56ab-84932548c34b"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e8a75e65-a3f3-4d92-a45b-84e71a13efab"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("83543e3f-5006-b471-729d-58a7c61e612e"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("ffb17990-df2a-35d0-a570-882cc225eb6a"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("28a931fc-ac0a-2ff4-a4ba-81dfa0031c44"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("a6255c1a-fe2b-b9e2-d8a9-68731d216703"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("502e3b11-8635-a04c-f3ad-7ba5b2f7c481"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("4ae81d34-4c8f-2c7d-ba2e-bd7552831749"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("0ad46ac5-96b0-c871-70f0-5357eea8b03f"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("22faf853-dc61-aa96-72ee-28591168084e"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("72690f7a-5d0f-eca1-4a49-9070dc89c6ed"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("0fb2252b-a8db-e6ef-3838-9b1a2daf1ba8"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("00e2c584-1a02-97af-e4c1-c9bb51fa3444"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("18fe6f6c-59a6-3542-66a2-5b2c55d32785"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("a22e4fab-16c1-bc54-2dc4-5fb1489116b2"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("ca743b31-6da0-8b4c-40e4-ff2c3272582d"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("8ef545bb-a22c-fac5-2a59-e6aed0373752"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("3ac0be60-163e-9b40-84d8-1bf7947f5047"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("5e6d87ec-3f23-3514-a62f-0b1839f82c89"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("9672ddc2-113e-cd73-eb4b-30fcfd7106b8"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("e1e58b15-6664-454c-868a-20442db30557"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("28caabc2-d912-4691-ef68-2b460339d373"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("14af0573-6550-60a6-9894-ecebf684b863"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("2ac025e4-c750-2521-7b8b-6400ed0a38e1"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("25a712c3-ebf9-f051-5d36-16b4ee865a4c"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("c022f910-eb91-7f02-d927-02b567190d16"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("cfb78258-268c-3971-9ba9-98d0d5388804"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("c8a80036-8391-f374-6d23-ae1ecb3aa6af"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("4da744ae-c3e7-ee70-ce5b-1cf9ac8b40c7"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("03c405e5-937c-4b50-1e5b-f1d2c2696e1c"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("4a996f4f-6de6-ad87-423f-669ecb89ade3"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("907e4bbf-9c26-7dae-e15e-7c16a4639408"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("c69b266d-4c80-70de-b01c-12f474f33ec2"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("e27fd0d0-15b3-61bf-9633-7c0e9089d80b"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("6bd014ec-8d7f-a8f8-8fd1-4fe0d15b822d"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("c6f49510-de99-27cf-2776-44f55b0951e7"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("4151b685-7026-ca33-9b72-5fc42cffb445"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("ccad46f6-6766-f9d6-f266-1f78ff9d54ee"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("20d90f2d-6628-b163-a1a0-eea522f13ffa"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("70daebe7-c9fc-4e02-a524-2fc825a49355"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("2d69b9db-58f7-a5e2-030e-6e79598e8dbb"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("5b2b7843-4b60-6d5a-4548-ae2d2527502f"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("3349fea9-7ef9-3d09-d45c-b06b205fb506"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("8d506d05-c64d-e83d-ce92-d56e70405771"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("17212ead-c27e-e8d4-1596-cec87345267d"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("903a9f68-d44c-2d49-7653-53d68354d945"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("edfe64f7-6af7-8dea-fb86-7d036eb15352"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("0a8aa1c3-1773-b8ef-4919-e9ac227c5792"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("e2bdd7fb-4ae8-135e-c902-8183c304f632"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("39fe3138-3fb0-1d60-45ad-f99d1fa99871"),
                            Bitrate = 79616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("a5b1f1ff-3d08-b956-f18f-d89d5aad3073"),
                            Bitrate = 9616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("011ddff0-fe01-d11e-f939-59bc1d2c4980"),
                            Bitrate = 3616000L,
                            FromResolution = "2160p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("e9abb805-de94-862b-7d64-9d0ba2651101"),
                            Bitrate = 79616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("51118aab-952b-406d-cf06-104f10262158"),
                            Bitrate = 9616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("811ccbf2-bf8e-ea8e-10f1-8f0bbb25db07"),
                            Bitrate = 3616000L,
                            FromResolution = "1080p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        },
                        new
                        {
                            Id = new Guid("b61759ed-2f59-9842-1860-daca192625a2"),
                            Bitrate = 79616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "2160p"
                        },
                        new
                        {
                            Id = new Guid("05019bf1-1c48-7be8-ec45-3f88d3120cff"),
                            Bitrate = 9616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "1080p"
                        },
                        new
                        {
                            Id = new Guid("c43b698a-5154-f54b-a3d4-5192d1a0bb92"),
                            Bitrate = 3616000L,
                            FromResolution = "720p",
                            MediaTestFileId = new Guid("1d943d13-586d-4562-a968-eb1d0ffae947"),
                            TestCaseType = 0,
                            ToCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            ToResolution = "720p"
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCaseArgument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FfmpegArgument")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FfmpegVersionGroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FfmpegVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FromHardwareCodecId")
                        .HasColumnType("uuid");

                    b.Property<int>("TestCaseArgumentDeviceType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ToHardwareCodecId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FfmpegVersionId");

                    b.HasIndex("FromHardwareCodecId");

                    b.HasIndex("ToHardwareCodecId");

                    b.ToTable("TestCaseArguments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e76ac5c1-0960-aad9-3369-fff3350bc56e"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("3e673757-b030-3f62-79c3-84ccb52de154"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("c01ec356-c148-b435-bb3d-61a2f56bb0b4"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("0c5576b4-b54c-e5fb-bf85-8d9c39701c2f"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("9a013667-1ba8-d785-5b89-1a4c9f2054b1"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("66addcf3-5150-0d6b-6b4e-0f1f957f7a71"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("e2308bd3-b628-811f-bf4e-fc5c769ad324"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("ad489985-ad40-0bb5-03d7-0099864b4c7f"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("419af307-3f52-b26f-e5af-6cfc7884f67a"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("b6e03e18-0d83-ebe9-ca32-f65251e9351b"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("5537564f-7fd9-1c5f-a89b-36356e846fbb"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("606ae1ab-0db2-ef96-8fd6-c32111e670d5"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("fd694998-393b-3025-f04a-21d2b113d63c"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("e8d7879d-105e-ba9e-f9f7-47b5ad02ac5d"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("6c00c3d3-cd88-003a-d2d0-72230c77c457"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("194bc681-b060-d87f-4dae-208ee160dca6"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("6b523570-76aa-b9d7-418d-a528ecc169ad"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("3d26a2b3-08da-15ca-d51f-661833bdf0a3"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("aa717124-8dd1-8248-4064-5ff818d4e787"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("a13d0c48-818e-0aca-5000-0bfc6af74e3d"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("e1adfe0c-eb4c-92a4-3bd3-a4b80c1e23bd"),
                            FfmpegArgument = "-c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("77bcbea6-2b15-0d89-a582-22c349b605d8"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("bf5751ec-85d3-43cf-798a-744ee0ae1e98"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("5689908d-ca45-f17b-f337-9b3f92e68a1b"),
                            FfmpegArgument = "-c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("0b41be12-36ad-c239-8598-4c8ca33e7e8f"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx264 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("60ecdc52-4724-11f8-2c9e-766a6ea167d8"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v libx265 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("b84c2dc5-a932-be59-b04b-4b5460d2ce1a"),
                            FfmpegArgument = "-c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=trunc(min(max(iw\\,ih*a)\\,{scale})/2)*2:trunc(ow/a/2)*2,format=yuv420p\" -c:v svt-av1 -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3504c0a3-19b6-418d-995e-c8731c9789a5"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 0,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("276ec8e3-d3b8-8457-237b-a60619e5bb3f"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("94736a4e-b0c9-a260-6aff-0d1c91b6ff44"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("66b268c6-bcd2-2f9b-3b47-75f1bd332bf5"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("5b0e2919-261e-e3c9-2758-d6be4efca895"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("633b5158-6583-1476-c608-ed67340f9a65"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("442c216a-40a6-2751-43a8-cbb047284faf"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("055df778-99b4-b2df-453c-eb2e002e71d2"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("989fe027-5e1c-f11a-22c4-381cb24c712b"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("63a8609b-aff7-4f32-62f5-4a5e68f21ee7"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("ca26676e-1a34-6d2e-5a4f-d46284b816e9"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("6c5d13f2-970f-cb21-f48c-68a57fa6f5ac"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("801a7283-9008-a1ad-6ad8-efc9f4f7beac"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v h264_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("22ea782b-8fa6-1f9c-015d-81c0c7c282af"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("e1a6cdde-b019-0702-d3e9-6ef7e5b7186c"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("8b555241-8af2-4355-82fb-8753d2f44468"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v hevc_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("7df6e3ba-aaf9-31f1-36d1-1d45ac314f67"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v h264_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("9205e113-1046-db8d-dc5d-e33cf49850b1"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v hevc_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("e1fbe6c4-35d3-8e67-5fdc-bf0d87869ae1"),
                            FfmpegArgument = "-init_hw_device cuda=cu:{gpu} -hwaccel cuda -hwaccel_output_format cuda -c:v av1_cuvid -i {video_file} -noautoscale -an -sn -vf \"scale_cuda=-1:{scale}:yuv420p\" -c:v av1_nvenc -preset p1 -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 1,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("fbead29f-a97c-9b0f-ada9-4b754ea4d11c"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("7ddc0e8d-3b17-8a03-7764-886ef2f15b25"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("5bfbb598-26a1-e488-c7f3-3a083bbc2008"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("60eed668-efcf-c5d8-b0f7-2b45b9cecbb2"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("f1bd8625-aa94-d9b1-caec-078a6d55c7d7"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("3e05393c-7153-24b9-8557-61c6b4b00e33"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("f5d7f0f8-b082-6a00-fc30-0797b3451eb4"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v h264_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("9b1ea278-49d6-725a-d175-249c6f0d9328"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v hevc_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("79f41edb-b7d3-26ab-9a82-3d9d7bc0b303"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -hwaccel vaapi -hwaccel_output_format vaapi -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale_vaapi=-1:{scale}:format=nv12\" -c:v av1_vaapi -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("a983b019-9d06-5dd2-e3df-31be4b878a59"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("826985c6-15ea-f224-f960-0a5171232db9"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("05f9b581-4f10-f5e7-f191-72876039ea3c"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v h264 -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("fd710759-16d7-76e8-d17e-3aaa1a8507f0"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("68d80cd6-d419-d3ba-1946-491d5ea485cb"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("514e94e3-5458-e9f0-6936-88a3b9fd19ec"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v hevc -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("c5858878-ea6f-eb37-0c64-8fb123de21d8"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v h264_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("8bf004b5-8404-dbec-d275-cc0ac1a9869b"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v hevc_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("bf2fa85a-cc6d-6091-5a2a-3f2c314d630b"),
                            FfmpegArgument = "-init_hw_device d3d11va:{gpu} -hwaccel d3d11va -hwaccel_output_format d3d11 -c:v dav1d -i {video_file} -noautoscale -an -sn -vf \"scale=-1:{scale}:format=nv12\" -c:v av1_amf -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("3b20be6a-7c32-41a0-a6ca-259937e69512"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 2,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("8d7c02f7-ccae-acf6-54ea-76e4bf1a6e38"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("2dde49e0-7c69-fdb0-1fad-f0ae2201b207"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("05c89e4b-f1dd-c375-1ca7-1b08991d9320"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v h264_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("377f2b1b-f3ab-0e3e-fd88-cf867e10c340"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("ec7b86ca-606d-85e1-1a10-36943ac21e03"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("3fbc831f-71cf-9bdb-9c47-450650e96fc3"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v hevc_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        },
                        new
                        {
                            Id = new Guid("edbee688-e771-e40e-108b-fefca71a978e"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v h264_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("bf2065dc-9b03-48b8-9a30-206a12a6319c")
                        },
                        new
                        {
                            Id = new Guid("e28bd218-5c1f-f573-3546-c93ead4b5e51"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v hevc_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("104537db-e1e2-4490-a82a-afaede9a8fd4")
                        },
                        new
                        {
                            Id = new Guid("126e9186-772c-1a3f-6fa6-331187d8b774"),
                            FfmpegArgument = "-init_hw_device vaapi=va:/dev/dri/by-path/{gpu}-render -init_hw_device qsv=qs@va -hwaccel qsv -hwaccel_output_format qsv -c:v av1_qsv -i {video_file} -noautoscale -an -sn -vf \"scale_qsv=-1:{scale}:format=nv12\" -c:v av1_qsv -preset veryfast -b:v {bitrate} -maxrate {bitrate} -f null - -benchmark",
                            FfmpegVersionGroupId = new Guid("9f9565f1-4661-484b-8c80-433bc909e70f"),
                            FromHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8"),
                            TestCaseArgumentDeviceType = 3,
                            ToHardwareCodecId = new Guid("dae90106-7f5a-4de0-9628-0b9071c4eff8")
                        });
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TestResolutions");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveyEntry", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.CpuType", "CpuType")
                        .WithMany()
                        .HasForeignKey("CpuTypeId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "FromHardwareCodec")
                        .WithMany()
                        .HasForeignKey("FromHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", "FromResolution")
                        .WithMany()
                        .HasForeignKey("FromResolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.GpuType", "GpuType")
                        .WithMany()
                        .HasForeignKey("GpuTypeId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", "HardwareSurveySubmission")
                        .WithMany("HardwareSurveyEntry")
                        .HasForeignKey("HardwareSurveySubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToHardwareCodec")
                        .WithMany()
                        .HasForeignKey("ToHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.TestResolution", "ToResolution")
                        .WithMany()
                        .HasForeignKey("ToResolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CpuType");

                    b.Navigation("FromHardwareCodec");

                    b.Navigation("FromResolution");

                    b.Navigation("GpuType");

                    b.Navigation("HardwareSurveySubmission");

                    b.Navigation("ToHardwareCodec");

                    b.Navigation("ToResolution");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.RawSurveySubmission", "RawSurveySubmission")
                        .WithMany()
                        .HasForeignKey("RawSurveySubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RawSurveySubmission");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "VideoCodec")
                        .WithMany()
                        .HasForeignKey("VideoCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCase", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", "MediaTestFile")
                        .WithMany("TestCases")
                        .HasForeignKey("MediaTestFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToCodec")
                        .WithMany()
                        .HasForeignKey("ToCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaTestFile");

                    b.Navigation("ToCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.TestCaseArgument", b =>
                {
                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", null)
                        .WithMany("TestCaseArguments")
                        .HasForeignKey("FfmpegVersionId");

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "FromHardwareCodec")
                        .WithMany()
                        .HasForeignKey("FromHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jellyfin.HardwareVisualizer.Server.Database.HardwareCodec", "ToHardwareCodec")
                        .WithMany()
                        .HasForeignKey("ToHardwareCodecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromHardwareCodec");

                    b.Navigation("ToHardwareCodec");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.FfmpegVersion", b =>
                {
                    b.Navigation("TestCaseArguments");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.HardwareSurveySubmission", b =>
                {
                    b.Navigation("HardwareSurveyEntry");
                });

            modelBuilder.Entity("Jellyfin.HardwareVisualizer.Server.Database.MediaTestFile", b =>
                {
                    b.Navigation("TestCases");
                });
#pragma warning restore 612, 618
        }
    }
}
